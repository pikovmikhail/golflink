# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-03-23 06:49
# flake8: noqa
from __future__ import unicode_literals

from django.db import migrations, models


def cart_included_to_power_cart(apps, schema_editor):
    Certificate = apps.get_model('certificates', 'Certificate')
    CertificateType = apps.get_model('certificates', 'CertificateType')
    CertificateGroupTemplate = apps.get_model('certificates', 'CertificateGroupTemplate')

    db_alias = schema_editor.connection.alias

    for c in Certificate.objects.using(db_alias).all():
        c.power_cart = 2 if c.cart_included else 0
        c.save()

    for ct in CertificateType.objects.using(db_alias).all():
        if ct.cart_included is not None:
            ct.power_cart = 2 if ct.cart_included else 0
        ct.save()

    for cgt in CertificateGroupTemplate.objects.using(db_alias).all():
        if cgt.cart_included is not None:
            cgt.power_cart = 2 if cgt.cart_included else 0
        cgt.save()


def power_cart_to_cart_included(apps, schema_editor):
    Certificate = apps.get_model('certificates', 'Certificate')
    CertificateType = apps.get_model('certificates', 'CertificateType')
    CertificateGroupTemplate = apps.get_model('certificates', 'CertificateGroupTemplate')

    db_alias = schema_editor.connection.alias

    for c in Certificate.objects.using(db_alias).all():
        c.cart_included = c.power_cart != 0
        c.save()

    for ct in CertificateType.objects.using(db_alias).all():
        if ct.power_cart is not None:
            ct.cart_included = ct.power_cart != 0
        else:
            ct.cart_included = None
        ct.save()

    for cgt in CertificateGroupTemplate.objects.using(db_alias).all():
        if cgt.power_cart is not None:
            cgt.cart_included = cgt.power_cart != 0
        else:
            cgt.cart_included = None
        cgt.save()


class Migration(migrations.Migration):

    dependencies = [
        ('certificates', '0033_certificatetype_merchandise_certificate'),
    ]

    operations = [
        migrations.AddField(
            model_name='certificate',
            name='power_cart',
            field=models.IntegerField(choices=[(0, 'Power cart not included'), (1, 'Mandatory power cart not included'), (2, 'Power cart included')], default=0),
        ),
        migrations.AddField(
            model_name='certificategrouptemplate',
            name='power_cart',
            field=models.IntegerField(blank=True, choices=[(0, 'Power cart not included'), (1, 'Mandatory power cart not included'), (2, 'Power cart included')], null=True),
        ),
        migrations.AddField(
            model_name='certificatetype',
            name='power_cart',
            field=models.IntegerField(blank=True, choices=[(0, 'Power cart not included'), (1, 'Mandatory power cart not included'), (2, 'Power cart included')], null=True),
        ),
        migrations.RunPython(cart_included_to_power_cart, power_cart_to_cart_included),
        migrations.RemoveField(
            model_name='certificate',
            name='cart_included',
        ),
        migrations.RemoveField(
            model_name='certificategrouptemplate',
            name='cart_included',
        ),
        migrations.RemoveField(
            model_name='certificatetype',
            name='cart_included',
        ),
    ]
