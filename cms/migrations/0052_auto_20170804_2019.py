# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-08-05 00:19
from __future__ import unicode_literals

import io

from PIL import Image

from django.core.files.storage import default_storage
from django.db import migrations


def optimize_jpeg(image, max_size=(1920, 1080)):
    # Open image to memory
    with default_storage.open(image.name, 'rb') as image_file:
        input_buffer = io.BytesIO(image_file.read())
        input_buffer.seek(0)

    # Optimize the image
    optimized = Image.open(input_buffer)
    optimized.thumbnail(max_size, Image.ANTIALIAS)

    # Save the image to memory
    output_buffer = io.BytesIO()
    optimized.save(output_buffer, 'JPEG', quality=60, optimize=True, progressive=True)
    output_buffer.seek(0)

    # Write the optimized image to storage
    with default_storage.open(image.name, 'wb') as image_file:
        image_file.write(output_buffer.getvalue())

    input_buffer.close()
    output_buffer.close()


def optimize_images(apps, schema_editor):
    ClubImage = apps.get_model('cms', 'ClubImage')
    CorpImage = apps.get_model('cms', 'CorpImage')

    for image in ClubImage.objects.all():
        try:
            optimize_jpeg(image.image)
        except FileNotFoundError:
            pass

    for image in CorpImage.objects.all():
        try:
            optimize_jpeg(image.image)
        except FileNotFoundError:
            pass


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0051_auto_20170804_0633'),
    ]

    operations = [
        migrations.RunPython(optimize_images, lambda x, y: None),
    ]
