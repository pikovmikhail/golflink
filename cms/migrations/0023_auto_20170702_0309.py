# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-07-02 07:09
# flake8: noqa
from __future__ import unicode_literals

import clublink.base.utils
import dirtyfields.dirtyfields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0022_auto_20170626_0840'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClubImageSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=2)),
                ('slug', models.CharField(max_length=64)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_sets', to='cms.ClubPage')),
            ],
        ),
        migrations.CreateModel(
            name='ClubImageSetImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=0)),
                ('image', models.ImageField(null=True, upload_to=clublink.base.utils.RandomizedUploadPath('page_image_set'))),
                ('image_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cms.ClubImageSet')),
            ],
            options={
                'ordering': ('sort',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ClubList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=2)),
                ('slug', models.CharField(max_length=64)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lists', to='cms.ClubPage')),
            ],
        ),
        migrations.CreateModel(
            name='ClubListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('sort', models.IntegerField(default=0)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cms.ClubList')),
            ],
            options={
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='CorpImageSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=2)),
                ('slug', models.CharField(max_length=64)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_sets', to='cms.CorpPage')),
            ],
        ),
        migrations.CreateModel(
            name='CorpImageSetImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=0)),
                ('image', models.ImageField(null=True, upload_to=clublink.base.utils.RandomizedUploadPath('page_image_set'))),
                ('image_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cms.CorpImageSet')),
            ],
            options={
                'ordering': ('sort',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CorpList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=2)),
                ('slug', models.CharField(max_length=64)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lists', to='cms.CorpPage')),
            ],
        ),
        migrations.CreateModel(
            name='CorpListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('sort', models.IntegerField(default=0)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cms.CorpList')),
            ],
            options={
                'ordering': ('sort',),
            },
        ),
        migrations.AlterUniqueTogether(
            name='list',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='list',
            name='club',
        ),
        migrations.RemoveField(
            model_name='listitem',
            name='list',
        ),
        migrations.DeleteModel(
            name='List',
        ),
        migrations.DeleteModel(
            name='ListItem',
        ),
        migrations.AlterUniqueTogether(
            name='corplist',
            unique_together=set([('page', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='corpimageset',
            unique_together=set([('page', 'locale', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='clublist',
            unique_together=set([('page', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='clubimageset',
            unique_together=set([('page', 'locale', 'slug')]),
        ),
    ]
